# Basic Configuration
spring:
  application:
    name: Api-server
  profiles:
    active: dev
  cloud:
    # Load Balancer Configuration
    loadbalancer:
      enabled: true
      cache:
        enabled: true
        ttl: 35s
        capacity: 256
      health-check:
        initial-delay: 0s
        interval: 25s
    gateway:
      server:
        webflux:
          discovery:
            locator:
              enabled: true  # Disable until Eureka server is available
              lower-case-service-id: true
              predicates:
                - name: Path
                  args:
                    pattern: "'/api/' + serviceId.toLowerCase() + '/**'"
              filters:
                - name: StripPrefix
                  args:
                    parts: 2
          routes:
            # Basic routes - minimal configuration for testing
            - id: product-service
              uri: http://localhost:8081
              predicates:
                - Path=/products/**
              filters:
                - StripPrefix=1
            
            - id: order-service
              uri: http://localhost:8082
              predicates:
                - Path=/orders/**
              filters:
                - StripPrefix=1
            
            # Health check route for the gateway itself
            - id: gateway-health
              uri: http://localhost:8886
              predicates:
                - Path=/health/**

  # OAuth2 JWT Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          # For development, you can use a local auth server or public key
          issuer-uri: http://localhost:9999/auth/realms/ministore
          # Alternative: Use JWK Set URI directly
          # jwk-set-uri: http://localhost:9999/auth/realms/ministore/protocol/openid_connect/certs

# Server Configuration
server:
  port: 8886

# Management endpoints are enabled by default in Spring Boot 3.x

# Eureka Configuration - Service Discovery  
# Temporarily disabled until Eureka server is available
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
  client:
    enabled: false  # Disable until Eureka server is running
    register-with-eureka: false
    fetch-registry: false
    service-url:
      default-zone: http://localhost:8761/eureka
    registry-fetch-interval-seconds: 30
    healthcheck:
      enabled: false  # Disable until Actuator is properly configured

# Resilience4j Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    configs:
      default:
        slidingWindowSize: 10
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowType: TIME_BASED
        minimumNumberOfCalls: 5
        waitDurationInOpenState: 60s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - org.springframework.web.client.HttpServerErrorException
          - java.util.concurrent.TimeoutException
          - java.io.IOException
    instances:
      productService:
        baseConfig: default
        failureRateThreshold: 60
      orderService:
        baseConfig: default
        failureRateThreshold: 40
        waitDurationInOpenState: 30s
  
  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - org.springframework.web.client.ResourceAccessException
          - java.util.concurrent.TimeoutException
    instances:
      productService:
        baseConfig: default
      orderService:
        baseConfig: default
        maxAttempts: 2

  timelimiter:
    configs:
      default:
        timeoutDuration: 5s
    instances:
      productService:
        baseConfig: default
      orderService:
        baseConfig: default
        timeoutDuration: 3s

# Logging Configuration
logging:
  level:
    '[org.springframework.cloud.gateway]': DEBUG
    '[org.springframework.cloud.loadbalancer]': DEBUG
    '[com.netflix.eureka]': INFO
    '[com.netflix.discovery]': INFO
    '[org.springframework.security]': DEBUG

# Debug Configuration
debug: false